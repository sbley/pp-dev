FORMAT: 1A
HOST: http://pp-dev.saxsys.de

# Poolpatz API
Poolpatz API ist ein Dienst für...

## Authentifizierung
Poolplatz API benötigt den User-Agent xyz. Authentifizierung über HTTP Basic.

## Media Types
Poolplatz API verwendet *application/json* als Media Type.

# Home [/v1/home]
## Home-Objekt abfragen [GET]
Liefert das Home-Objekt zurück. Das Home-Objekt ist die Einstiegsressource der REST-API.
+ Response 200 (application/json)

        {
            "self": "v1/home", "locations": 
            {
                "self": "v1/locations"
            },
            "users": 
            {
                "self": "v1/users"},
                "me": 
                {
                    "self": "v1/users/me"
                }
            }
        }
        
# Group Standorte
Ein Standort hat die folgenden Attribute:
- name
- street
- zip
- city
- rooms
- availableDesks

## Standort [/v1/locations/{locationId}]

+ Parameters
    + locationId (required, number, `1`) ... ID des Standortes der geladen werden soll.

### Standort abfragen [GET]
Liefert den Standort für die übergebene `locationId` zurück.
+ Response 200 (application/json)

        {
                "self": "v1/locations/{locationId}",
                "name": "FFP",
                "street": "Fritz-Foerster-Platz 2",
                "zip": "01069",
                "city": "Dresden",
                "rooms":
                {
                    "self": "v1/locations/1/rooms"
                },
                "availableDesks":
                {
                    "self" :"v1/locations/1/desks/available"
                }
            }

## Standorte [/v1/locations]


### Standortliste abfragen [GET]
Liefert die Liste der Standorte zurück.
+ Response 200 (application/json)

        {
            "self": "v1/locations",
            "elements": 
            [{
                "self": "v1/locations/1",
                "name": "FFP",
                "street": "Fritz-Foerster-Platz 2",
                "zip": "01069",
                "city": "Dresden",
                "rooms":
                {
                    "self":
                    "v1/locations/1/rooms"
                },
                "availableDesks":
                {
                    "self": "v1/locations/1/desks/available"
                }
            },
            {
                "self": "v1/locations/2255",
                "name": "Bäumann City ",
                "street": "Teststraße 5",
                "zip": "01471",
                "city": "Bäumann City ",
                "rooms":
                {
                    "self": "v1/locations/2255/rooms"
                },
                "availableDesks":
                {
                    "self": "v1/locations/2255/desks/available"
                }
            },
            {
                "self": "v1/locations/2298",
                "name": "Test",
                "street": "Test",
                "zip": "01234",
                "city": "Test",
                "rooms":
                {
                    "self": "v1/locations/2298/rooms"
                },
                "availableDesks":
                {
                    "self": "v1/locations/2298/desks/available"
                }
            }]
        }

# Group Raeume
Ein Raum hat die folgenden Attribute:
- number
- location
- desks

## Raeume eines Standorts [/v1/locations/{locationId}/rooms]
+ Parameters
    + locationId (required, number, `1`) ... ID des Standortes der geladen werden soll.

### Räume eines Standorts abfragen [GET]  
Liefert alle Räume für den Standort zurück, der zur übergebene `locationId` passt.
+ Response 200 (application/json)

        {
            "self": "v1/locations/1/rooms",
            "elements":
            [{
                "self": "v1/rooms/2",
                "number": "FFP 101",
                "location":
                {
                    "self": "v1/locations/1"
                },
                "desks":
                {
                    "self": "v1/rooms/2/desks"
                }
            },
            {
                "self": "v1/rooms/2035",
                "number": "BS 304",
                "location":
                {
                    "self": "v1/locations/1"
                },
                "desks":
                {
                    "self":"v1/rooms/2035/desks"
                }
            }]
        }

## Raum [/v1/rooms/{roomId}]
+ Parameters
    + roomId (required, number, `2`) ... ID des Raums der geladen werden soll.
 

### Raum abfragen [GET]  
Liefert den Raum für die übergebene `roomId` zurück.
+ Response 200 (application/json)

        {
            "self": "v1/rooms/2",
            "number": "FFP 101",
            "location":
            {
                "self": "v1/locations/1"
            },
            "desks":
            {
                "self": "v1/rooms/2/desks"
            }
        }

# Group Plaetze
Ein Platz hat die folgenden Attribute:
- number
- location
- desks

## Plaetze eines Raums [/v1/rooms/{roomId}/desks]

+ Parameters
    + roomId (required, number, `2`) ... ID des Raums dessen Plätze geladen werden sollen.

### Plätze eines Raums abfragen [GET]  
Liefert alle Plätze des Raums, der zur übergebenen `roomId` passt.
+ Response 200 (application/json)

        {
            "self": "v1/rooms/2/desks",
            "elements":
            [{
                "self": "v1/desks/4",
                "number": "2",
                "room":
                {
                    "self": "v1/rooms/2"
                },
                "phoneNumber": "0351/49701-684",
                "network": "intern",
                "project": "Daimler",
                "reservations":
                {
                    "self": "v1/reservations?deskId=4"
                }
            },
            {
                "self": "v1/desks/5",
                "number": "3",
                "room":
                {
                    "self": "v1/rooms/2"
                },
                "phoneNumber": "0351/49701-675",
                "network": "intern",
                "project": "Daimler",
                "reservations":
                {
                    "self": "v1/reservations?deskId=5"
                }
            }]
        }
        
## Platz [/v1/desk/{deskId}]
+ Parameters
    + deskId (required, number, `2`) ... ID des Platzes der geladen werden soll.
 

### Platz abfragen [GET]
Liefert den Platz für die übergebene `deskId` zurück.
+ Response 200 (application/json)

        {
            "self": "v1/desks/4",
            "number": "2",
            "room":
            {
                "self": "v1/rooms/2"
            },
            "phoneNumber": "0351/49701-684",
            "network": "intern",
            "project": "Daimler",
            "reservations":
            {
                "self": "v1/reservations?deskId=4"
            }
        }
